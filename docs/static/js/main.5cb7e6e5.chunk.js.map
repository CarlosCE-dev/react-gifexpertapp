{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","ctg","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAgB9C,OACE,0BAAMC,SATa,SAAEC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAG,OAAOP,GAAP,mBAAsBO,OACxCN,EAAc,OAMhB,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAjBgB,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,Y,uBCRnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,OCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAexC,OARAC,qBAAW,WACPxB,EAASC,GAAWwB,MAAQ,SAAAC,GAAI,OAAIH,EAAS,CACrCf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAEEqB,EDZ0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAGrB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAEHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEbxBkB,EAAe,WAAO,IAAD,EAEQ1C,mBAAS,CAAC,cAFlB,mBAEtB2C,EAFsB,KAEV5C,EAFU,KAQ9B,OACE,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACA,4BAEM4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,U,MCjBnC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.5cb7e6e5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [ inputValue, setinputValue] = useState('');\r\n\r\n    const handelInputChange = ( e ) => {\r\n        setinputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ){\r\n            setCategories( ctg => [  inputValue, ...ctg ]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={ handleSubmit }>\r\n          <input\r\n              type=\"text\"\r\n              value={ inputValue }\r\n              onChange={ handelInputChange }\r\n          />\r\n      </form>\r\n    );\r\n      \r\n  }\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n  ","export const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Kl6H7ToD12cGWVPbezzzVzh7FjCw2lF6`;\r\n    const resp = await fetch( url )\r\n    \r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n \r\n    const { data:images, loading } = useFetchGifs( category );\r\n   \r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n       </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category ).then( ( imgs => setState({\r\n                data: imgs,\r\n                loading: false,\r\n            }) \r\n        ))\r\n    }, [ category ]);\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n// FC\r\nexport const GifExpertApp = () => {\r\n\r\n    const [ categories, setCategories ] = useState(['One punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [ ...categories, 'Goku' ] )\r\n    // }\r\n\r\n    return (\r\n      <>\r\n          <h1>GifExpertApp</h1>\r\n          <AddCategory setCategories={ setCategories }/>\r\n          <hr/>\r\n          <ul>\r\n              {\r\n                categories.map( category => (\r\n                    <GifGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                    />\r\n                ))\r\n              }\r\n          </ul>\r\n      </>\r\n    );\r\n      \r\n  }\r\n  \r\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}